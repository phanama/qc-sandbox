# mongos deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
    meta.helm.sh/release-name: mongodb
    meta.helm.sh/release-namespace: default
  labels:
    app.kubernetes.io/component: mongos
    app.kubernetes.io/instance: mongodb
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: mongodb-sharded
    helm.sh/chart: mongodb-sharded-3.11.0
  name: mongodb-mongodb-sharded-mongos
  namespace: default
spec:
  # scaled to 2
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/component: mongos
      app.kubernetes.io/instance: mongodb
      app.kubernetes.io/name: mongodb-sharded
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        prometheus.io/port: "9216"
        prometheus.io/scrape: "true"
      creationTimestamp: null
      labels:
        app.kubernetes.io/component: mongos
        app.kubernetes.io/instance: mongodb
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mongodb-sharded
        helm.sh/chart: mongodb-sharded-3.11.0
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchLabels:
                  app.kubernetes.io/component: mongos
                  app.kubernetes.io/instance: mongodb
                  app.kubernetes.io/name: mongodb-sharded
              topologyKey: kubernetes.io/hostname
            weight: 1
      containers:
      - env:
        - name: MONGODB_ENABLE_NUMACTL
          value: "no"
        - name: BITNAMI_DEBUG
          value: "false"
        - name: MONGODB_SHARDING_MODE
          value: mongos
        - name: MONGODB_MAX_TIMEOUT
          value: "120"
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb-mongodb-sharded
        - name: MONGODB_REPLICA_SET_KEY
          valueFrom:
            secretKeyRef:
              key: mongodb-replica-set-key
              name: mongodb-mongodb-sharded
        - name: MONGODB_POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: MONGODB_ADVERTISED_HOSTNAME
          value: $(MONGODB_POD_NAME)
        - name: MONGODB_PORT_NUMBER
          value: "27017"
        - name: MONGODB_CFG_PRIMARY_HOST
          value: mongodb-mongodb-sharded-configsvr-0.mongodb-mongodb-sharded-headless.default.svc.cluster.local
        - name: MONGODB_CFG_REPLICA_SET_NAME
          value: mongodb-mongodb-sharded-configsvr
        - name: MONGODB_SYSTEM_LOG_VERBOSITY
          value: "0"
        - name: MONGODB_DISABLE_SYSTEM_LOG
          value: "no"
        - name: MONGODB_ENABLE_IPV6
          value: "no"
        - name: MONGODB_ENABLE_DIRECTORY_PER_DB
          value: "no"
        image: docker.io/bitnami/mongodb-sharded:4.4.11-debian-10-r0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          exec:
            command:
            - mongo
            - --disableImplicitSessions
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: mongos
        ports:
        - containerPort: 27017
          name: mongodb
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - mongo
            - --disableImplicitSessions
            - --eval
            - db.adminCommand('ping')
          failureThreshold: 6
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        # tune the resource requests and limits
        resources:
          requests:
            cpu: 50m
            memory: 512Mi
          limits:
            cpu: 1
            memory: 1Gi
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      - command:
        - sh
        - -ec
        - "#!/bin/sh\n/bin/mongodb_exporter --web.listen-address \":9216\" --mongodb.uri
          mongodb://root:`echo $MONGODB_ROOT_PASSWORD | sed -r \"s/@/%40/g;s/:/%3A/g\"`@localhost:27017/admin "
        env:
        - name: MONGODB_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: mongodb-root-password
              name: mongodb-mongodb-sharded
        image: docker.io/bitnami/mongodb-exporter:0.11.2-debian-10-r382
        imagePullPolicy: Always
        name: metrics
        ports:
        - containerPort: 9216
          name: metrics
          protocol: TCP
        resources: {}
        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        fsGroup: 1001
      serviceAccount: default
      serviceAccountName: default
      terminationGracePeriodSeconds: 30
